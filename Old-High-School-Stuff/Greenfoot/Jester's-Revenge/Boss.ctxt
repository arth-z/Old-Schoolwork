#BlueJ class context
comment0.target=Boss
comment0.text=\r\n\ The\ main\ enemy\ of\ the\ game.\ Basic\ abstract\ framework\ for\ boss\ behaviour,\ except\ for\ attack\ behaviour.\r\n\ Includes\:\r\n\ <p>\r\n\ \ -\ Boss\ vulnerability\ cell\ mechanic\ (the\ way\ the\ player\ attacks\ the\ boss,\ by\ moving\ to\ a\ cell\ and\ pressing\ space\ while\ anchored\ to\ it)\r\n\ </p>\r\n\ <p>\r\n\ \ -\ Boss\ spawn-in\ animation\r\n\ </p>\r\n\ <p>\r\n\ \ -\ Boss\ health\ and\ death\r\n\ </p>\r\n\ \r\n\ <p>\r\n\ Does\ not\ include\ the\ mechanisms\ for\ attacking\ that\ each\ boss\ has\ -\ those\ are\ in\ the\ individual\ subclasses\ itself.\r\n\ </p>\r\n\ \r\n\ <p>\r\n\ Issues\:\r\n\ </p>\r\n\ <p>\ -\ Boss\ death\ animation\ is\ inconsistent.\ </p>\r\n\ @author\ Arthur\ Zeng\r\n\ @version\ 3.00\r\n
comment1.params=
comment1.target=void\ attackControl()
comment1.text=\r\n\ A\ "promise"\ that\ each\ boss\ subclass\ will\ have\ a\ method\ known\ as\ attackControl,\ meant\ to\ be\ called\ in\ act(),\ controlling\ the\ boss's\r\n\ attacking\ behaviour.\r\n
comment10.params=
comment10.target=java.lang.String\ getType()
comment11.params=
comment11.target=void\ act()
comment11.text=\r\n\ Act\ method\ for\ the\ boss.\ Ensures\ that\ the\ boss\ is\ at\ full\ transparency\ -\ fades\ in\ by\ a\ value\ of\ 1\ each\ act\ if\ it\ is\ not\ (for\ spawning\ animation).\r\n\ If\ the\ boss\ is\ at\ full\ transparency,\ it\ continuously\ updates\ the\ instance\ variable\ representing\ the\ game\ world's\ checkerBoard,\ so\ that\ it\ can\ access/manipulate\ it.\r\n\ If\ the\ boss's\ health\ is\ above\ zero,\ it\ performs\ its\ attack\ behaviour\ and\ maintains\ the\ vulnerability\ cell\ on\ the\ grid.\r\n\ Otherwise,\ it\ dies.\r\n
comment2.params=image
comment2.target=Boss(greenfoot.GreenfootImage)
comment2.text=\r\n\ The\ constructor\ for\ the\ Boss\ class\ initialises\ a\ few\ values\:\ multiple\ timers/choose\ variables\ to\ 0\ (death\ and\ attack),\ and\ health\ to\ 13).\r\n\ It\ also\ sets\ the\ boss's\ image\ as\ a\ parameter,\ and\ initialises\ some\ sound\ variables.\r\n\ \r\n\ @param\ image\ \ \ \ \ \ \ \ \ the\ GreenfootImage\ you\ would\ want\ the\ boss\ to\ take\ on\r\n
comment3.params=
comment3.target=int\ maintainVulnCell()
comment3.text=\r\n\ A\ method\ that\ maintains\ the\ Boss's\ singular\ vulnerability\ cell\ on\ the\ game\ world's\ grid,\ meant\ to\ be\ called\ in\ act().\r\n\ It\ returns\ a\ type\ int\ in\ order\ to\ terminate\ the\ function\ early\ if\ there\ is\ already\ a\ vulnCell\ on\ the\ world.\ \r\n\ Return\ value\ currently\ is\ not\ used\ for\ anything.\r\n\ \r\n\ @return\ int\ \ \ \ \ \ \ \ \ \ -1\ if\ there\ already\ is\ a\ vuln\ cell\ on\ the\ grid,\ 1\ if\ there\ is\ no\ vuln\ cell\ on\ the\ grid.\r\n
comment4.params=
comment4.target=void\ generateVulnCell()
comment4.text=\r\n\ A\ method\ that\ randomly\ creates\ a\ single\ vulnerability\ cell\ on\ the\ game\ world's\ grid.\r\n
comment5.params=x
comment5.target=void\ takeDamage(int)
comment5.text=\r\n\ Simple\ mutator\ that\ subtracts\ the\ parameter\ passed\ into\ it\ from\ the\ boss's\ health\ value.\r\n\ Called\ by\ other\ objects\ (Player).\r\n\ \r\n\ @param\ x\ \ \ \ \ \ \ \ \ the\ damage\ you\ would\ like\ to\ inflict\ onto\ the\ boss\ health\r\n
comment6.params=
comment6.target=int\ getHealth()
comment7.params=w
comment7.target=void\ addedToWorld(greenfoot.World)
comment7.text=\r\n\ Override\ for\ Greenfoot's\ addedToWorld()\ method,\ called\ when\ the\ boss\ is\ added\ to\ the\ world.\ \r\n\ Assuming\ the\ world\ is\ a\ JestersRevenge\ object\ and\ contains\ a\ checkerboard\ (game\ grid),\ it\ stores\ that\ into\ a\ instance\ variable,\ casts\ \r\n\ the\ world\ it\ is\ added\ into\ as\ JestersRevenge\ and\ saves\ that\ as\ another\ instance\ variable,\ and\ then\ sets\ its\ transparency\ to\ 0\ (for\ spawning\ animation).\r\n\ \r\n\ @param\ w\ \ \ \ \ \ \ \ \ the\ world\ the\ Boss\ is\ added\ to.\r\n
comment8.params=
comment8.target=void\ die()
comment8.text=\r\n\ Death\ process\ for\ a\ boss.\ Removes\ their\ attacks,\ attack\ telegraphs,\ and\ vulnerability\ cell\ from\ the\ world,\ \r\n\ then\ adds\ a\ BossDeath\ centered\ on\ them\ (a\ gif),\ and\ deletes\ both\ itself\ and\ the\ BossDeath\ from\ the\ world\ after\ a\ set\ amount\ of\ acts\r\n\ (attempting\ to\ be\ as\ accurate\ to\ the\ end\ of\ the\ gif\ as\ possible,\ although\ it\ is\ inconsistent\ and\ varies\ from\ death\ to\ death).\r\n\ Called\ in\ act().\r\n
comment9.params=
comment9.target=void\ clearBoard()
numComments=12
