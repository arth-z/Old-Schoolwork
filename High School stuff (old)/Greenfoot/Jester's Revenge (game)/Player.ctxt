#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ The\ player\ of\ the\ game.\ A\ relatively\ extensive\ class,\ contains\ the\ mechanisms\ for\ player\ movement,\ health,\ damage,\ parries,\ blanks,\ death,\ and\ more.\r\n\ Is\ the\ entity\ controlled\ by\ the\ keyboard\ in\ gameplay.\ Has\ an\ "anchor"\ cell\ -\ the\ cell\ the\ Player\ currently\ occupies,\ and\ where\ much\ of\ the\ action\ takes\ place.\r\n\ \r\n\ @author\ Arthur\ Zeng\r\n\ @version\ 1.00\r\n
comment1.params=anchor
comment1.target=Player(Cell)
comment1.text=\r\n\ Player's\ constructor\ initialises\ health\ to\ 5,\ damage\ to\ 1,\ iFrames\ to\ 60,\ parryCooldown\ to\ 0,\ blankCooldown\ to\ 0.\r\n\ It\ also\ initialises\ several\ sound\ variables\ as\ well,\ mostly\ arrays.\r\n\ sets\ its\ image,\ and\ defines\ an\ anchor\ cell\ that\ the\ player\ initially\ anchors\ to.\ The\ "anchor"\ cell\ for\ the\ Player\ is\ typically\ the\ cell\ it\ is\ attached\ to.\r\n\ \r\n\ @param\ anchor\ \ \ \ \ \ \ \ the\ initial\ anchor\ cell\ of\ the\ player.\r\n
comment10.params=
comment10.target=void\ parry()
comment10.text=\r\n\ A\ parry.\ Essentially\ just\ a\ way\ of\ setting\ iFrames\ in\ a\ specific\ way\ to\ give\ you\ 90\ acts\ of\ guaranteed\ immunity,\ with\ some\ added\r\n\ setting\ of\ values\ such\ as\ cooldowns\ or\ calling\ a\ World\ method\ to\ make\ sure\ things\ are\ going\ smoothly\ and\ things\ work\ together.\r\n
comment11.params=
comment11.target=void\ blankCheck()
comment11.text=\r\n\ Checks\ for\ blanks,\ and\ its\ cooldown.\ If\ the\ button\ is\ pressed,\ but\ the\ cooldown\ is\ still\ active,\ nothing\ happens.\r\n\ If\ the\ button\ is\ pressed\ but\ the\ cooldown\ is\ not\ active,\ a\ blank\ appears.\r\n
comment12.params=
comment12.target=void\ blank()
comment12.text=\r\n\ A\ blank.\ Deletes\ any\ TelegraphIndicators\ and\ damageEffects\ on\ the\ board,\ and\ prevents\ them\ from\ progressing\ to\ their\ damaging\ states.\r\n
comment13.params=
comment13.target=void\ act()
comment13.text=\r\n\ Act\ -\ update\ the\ checkerBoard\ by\ access\ to\ an\ instance\ variable,\ check\ for\ movement,\ position,\ blanks,\ parrise,\ damage,\ and\ attacks.\r\n
comment2.params=w
comment2.target=void\ addedToWorld(greenfoot.World)
comment2.text=\r\n\ Override\ of\ Greenfoot's\ addedToWorld()\ method.\ When\ added\ to\ the\ world,\ it\ casts\ it\ as\ JestersRevenge\ to\ store\ it\ in\ an\ instance\ variable\ for\ easy\ access.\r\n\ It\ also\ stores\ the\ world's\ checkerBoard\ (grid)\ onto\ a\ local\ variable\ for\ easy\ access\ as\ well.\r\n
comment3.params=
comment3.target=void\ updatePosition()
comment3.text=\r\n\ Method\ to\ quickly\ update\ the\ position\ of\ the\ player\ to\ its\ anchor's\ coordinates.\r\n
comment4.params=anchor
comment4.target=void\ getNewAnchor(Cell)
comment4.text=\r\n\ Method\ to\ completely\ detach\ from\ current\ anchor\ and\ gain\ a\ new\ one\ based\ on\ parameter\ passed\ into\ it.\r\n\ \r\n\ @param\ anchor\ \ \ \ \ \ \ \ the\ cell\ to\ become\ the\ new\ anchor.\r\n
comment5.params=
comment5.target=Cell\ getAnchor()
comment5.text=\r\n\ Returns\ current\ anchor,\ or\ the\ cell.\r\n\ \r\n\ @param\ anchor\ \ \ \ \ \ \ \ the\ cell\ to\ become\ the\ new\ anchor.\r\n
comment6.params=
comment6.target=void\ playerMovementCheck()
comment6.text=\r\n\ Checks\ for\ movement.\ If\ a\ movement\ key\ is\ pressed,\ the\ Player\ disattaches\ from\ current\ anchor\ to\ the\ anchor\ specified\ by\ the\ movement\ key.\r\n\ Since\ it\ checks\ on\ release,\ not\ press,\ movement\ is\ on\ release\ as\ well.\ If\ the\ Player\ tries\ to\ access\ an\ anchor\ out\ of\ bounds,\r\n\ then\ the\ code\ will\ not\ execute\ -\ so\ if\ the\ player\ tries\ to\ move\ out\ of\ the\ grid,\ they\ can't.\r\n
comment7.params=
comment7.target=void\ attackCheck()
comment7.text=\r\n\ Checks\ for\ attacking.\ If\ the\ Player\ anchor\ is\ a\ vuln\ cell,\ and\ space\ is\ being\ pressed,\ then\ the\ boss\ the\ vuln\ cell\ belongs\ to\ is\ damaged\ by\ 1.\r\n\ There\ is\ some\ different\ code\ that\ is\ run\ if\ the\ Player\ is\ fighting\ Spades\ and\ Hearts,\ but\ on\ the\ whole,\ it\ remains\ the\ same.\r\n\ The\ vuln\ cell\ then\ becomes\ not\ a\ vuln\ cell.\r\n
comment8.params=
comment8.target=void\ damageCheck()
comment8.text=\r\n\ Checks\ for\ damage.\ If\ the\ player\ touches\ a\ damageEffect,\ and\ \ iFrames\ (incremented\ each\ act,\ reset\ when\ hit)\ are\ greater\ than\ 60,\ they'll\ take\ 1\ damage.\r\n\ Translates\ roughly\ to\ one\ second\ of\ immunity\ each\ time\ you\ get\ hit,\ to\ allow\ for\ a\ bit\ of\ recovery.\r\n\ Also\ determines\ which\ sprite\ the\ player\ adopts\ based\ on\ their\ iFrames\ -\ there\ is\ a\ special\ sprite\ for\ iFrames\ below\ 60\ (in\ immunity\ period)\r\n
comment9.params=
comment9.target=void\ parryCheck()
comment9.text=\r\n\ Checks\ for\ parrying,\ and\ its\ cooldown.\ If\ the\ button\ is\ pressed,\ but\ the\ cooldown\ is\ still\ active,\ nothing\ happens.\r\n\ If\ the\ button\ is\ pressed\ but\ the\ cooldown\ is\ not\ active,\ a\ parry\ occurs.\r\n
numComments=14
