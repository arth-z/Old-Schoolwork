#BlueJ class context
comment0.target=TelegraphIndicator
comment0.text=\r\n\ A\ class\ used\ by\ the\ Bosses\ to\ attack\ specific\ Cells,\ doubling\ also\ as\ a\ telegraph\ for\ the\ player\ to\ react\ to\ before\ the\ attack\ heads\ their\ way\ proper.\r\n\ For\ visual\ fidelity,\ it\ typically\ physically\ appears\ from\ the\ boss\ it's\ assigned\ to\ seek\ out\ the\ tile\ it's\ targetting\ before\ remaining\ there\r\n\ for\ its\ remaining\ lifespan,\ then\ spawning\ in\ a\ damageEffect\ as\ it\ disappears.\ As\ such,\ it\ inherits\ from\ SuperSmoothMover\r\n\ \r\n\ @author\ Arthur\ Zeng\r\n\ @version\ 2.00\r\n
comment1.params=boss\ targetCell\ maxSpeed\ duration
comment1.target=TelegraphIndicator(greenfoot.Actor,\ greenfoot.Actor,\ int,\ int)
comment1.text=\r\n\ The\ constructor\ for\ the\ TelegraphIndicator.\ Initialises\ multiple\ other\ variables,\ such\ as\ its\ own\ initial\ GifImage\ sprite,\ and\ its\ timers\r\n\ (one\ for\ self\ deletion\ if\ it\ gets\ stuck,\ one\ for\ deletion\ after\ it's\ finished\ it's\ job)\r\n\ \r\n\ @param\ boss\ \ \ \ \ \ \ \ \ \ the\ boss\ this\ TelegraphIndicator\ will\ "emerge",\ or\ spawn,\ from\r\n\ @param\ targetCell\ \ \ \ the\ cell\ this\ TelegraphIndicator\ will\ attempt\ to\ seek\ after\ it's\ been\ spawned\r\n\ @param\ maxSpeed\ \ \ \ \ \ max\ speed\ of\ the\ TelegraphIndicator\r\n\ @param\ duration\ \ \ \ \ \ how\ long\ this\ TelegraphIndicator\ will\ remain\ on\ its\ target\ cell\ after\ seeking\ it\ before\ disappearing\ and\ spawning\ its\ damageEffect\r\n
comment2.params=fadeAway\ opaqueDuration\ speed\ sprite
comment2.target=void\ initNextAttackEffect(int,\ int,\ double,\ greenfoot.GreenfootImage)
comment2.text=\r\n\ An\ "auxiliary\ constructor",\ or\ a\ method\ that\ serves\ as\ a\ secondary\ constructor\ for\ another\ object.\r\n\ In\ this\ case,\ this\ method\ serves\ as\ the\ init\ method\ for\ the\ TelegraphIndicator's\ corresponding\ damageEffect\ it\ spawns\ at\ the\ end\ of\ its\ lifetime.\r\n\ The\ parameters\ passed\ in\ here\ mirror\ the\ parameters\ passed\ into\ the\ DamageEffect\ constructor.\r\n\ \r\n\ @param\ fadeAway\ \ \ \ \ \ \ \ \ \ number\ determining\ how\ quickly\ the\ damageEffect\ fades\ away,\ passed\ into\ super()\r\n\ @param\ opaqueDuration\ \ \ \ number\ determining\ how\ long\ the\ damage\ effect\ stays\ opaque\ (and\ damaging)\r\n\ @param\ speed\ \ \ \ \ \ \ \ \ \ \ \ \ how\ fast\ the\ damageEffect\ fades\ in\ to\ max\ opacity\r\n\ @param\ sprite\ \ \ \ \ \ \ \ \ \ \ \ the\ sprite/image\ of\ the\ damageEffect,\ passed\ into\ super()\r\n
comment3.params=w
comment3.target=void\ addedToWorld(greenfoot.World)
comment3.text=\r\n\ An\ override\ of\ Greenfoot's\ addedToWorld()\ method,\ called\ whenever\ the\ object\ is\ added\ into\ the\ world.\r\n\ Here,\ it\ sets\ its\ initial\ coordinates\ to\ the\ same\ as\ its\ boss\ instance\ variable\ (passed\ into\ constructor)\r\n\ \r\n\ @param\ w\ \ \ \ \ \ \ \ \ the\ world\ the\ object\ is\ added\ into\r\n
comment4.params=
comment4.target=void\ act()
comment4.text=\r\n\ TelegraphIndicator's\ act\ method\ continously\ sets\ its\ current\ image\ and\ transparency\ from\ its\ GifImage\ (since\ that's\ how\ that\ class\ works).\r\n\ It\ also\ makes\ it\ turn\ towards\ its\ target\ cell\ and\ move\ at\ maxSpeed\ towards\ it\ if\ it's\ not\ already\ touching\ it.\r\n\ If\ it\ IS\ touching\ it,\ then\ it\ sets\ its\ location\ to\ its\ target's\ X\ and\ Y\ coordinates\ in\ the\ world\ (plus\ some\ offset\ to\ make\ it\ look\ nicer),\ \r\n\ resets\ its\ rotation\ to\ 0,\ and\ remains\ there\ until\ a\ timer\ exceeds\ its\ duration\ variable\ -\ then\ it\ disappears,\ but\ not\ without\ leaving\ a\ damageEffect\r\n\ (defined\ by\ the\ initNextAttackEffect()\ method).\ There\ is\ also\ a\ failsafe\ -\ if\ for\ some\ reason\ the\ TelegraphIndicator\ can't\ intersect\ its\ target\ in\r\n\ 180\ acts,\ it\ self-deletes.\r\n
numComments=5
