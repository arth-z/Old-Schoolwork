#BlueJ class context
comment0.target=Cell
comment0.text=\r\n\ A\ class\ representing\ a\ cell\ upon\ a\ 2d\ grid\ of\ movement-based\ tiles.\r\n\ Functions\ as\ an\ individual\ "staging\ ground"\ upon\ which\ the\ game's\ action\ takes\ place\ (so\ player\ movement,\ attacks,\ etc.)\r\n\ While\ critical\ to\ the\ function\ of\ the\ game,\ it's\ still\ a\ relatively\ simple\ class\ with\ a\ lot\ of\ getters\ and\ setters.\r\n\ Through\ a\ cell,\ one\ can\ reference/access\ a\ Player\ (movement,\ attack),\ or\ a\ Boss\ (vulnerability).\r\n\ \r\n\ @author\ Arthur\ Zeng\r\n\ @version\ 1.00\r\n
comment1.params=type
comment1.target=Cell(java.lang.String)
comment1.text=\r\n\ The\ constructor\ for\ the\ cell\ object\ initialises\ a\ few\ variables\ -\ mainly,\ the\ occupying\ player\ of\ the\ cell\ as\ null,\ its\ type\ as\ the\ parameter,\r\n\ its\ state\ as\ an\ "attack\ cell"\ against\ a\ boss\ as\ false,\ its\ transparency\ as\ 200,\ and\ its\ image\ based\ on\ its\ type\ (either\ white\ or\ black)\r\n\ \r\n\ @param\ type\ \ \ \ \ \ \ \ \ \ pass\ in\ string\ objects\ that\ are\ either\ named\ "white"\ or\ "black"\ -\ this\ determines\ whether\ or\ not\ the\ cell\ is\ a\ dark\ tile\ or\ a\ light\ one.\r\n
comment10.params=
comment10.target=Boss\ getBossOfThisCell()
comment10.text=\r\n\ Getter\ for\ which\ Boss\ this\ cell\ can\ attack\ if\ the\ Player\ moves\ to\ it\ and\ presses\ space,\ essentially.\r\n\ \r\n\ @return\ Boss\ \ \ \ \ \ \ \ \ either\ null\ or\ the\ existing\ boss(es)\ in-game.\r\n
comment11.params=boss
comment11.target=void\ becomeBossOfThisCell(Boss)
comment11.text=\r\n\ Mutator\ for\ the\ boss\ variable\ -\ passes\ in\ a\ Boss\ object\ into\ the\ cell\ so\ the\ cell\ can\ access\ it\ by\ instance\ variable.\r\n\ \r\n\ @param\ boss\ \ \ \ \ \ \ \ \ \ the\ boss\ you\ want\ to\ pass\ into\ the\ cell\ to\ allow\ access\ (typically\ to\ facilitate\ attack\ interactions)\r\n
comment12.params=
comment12.target=boolean\ isAttackCell()
comment12.text=\r\n\ Getter\ for\ whether\ or\ not\ this\ cell\ is\ defined\ as\ an\ attackCell\ or\ whether\ or\ not\ it\ is\ associated\ with\ a\ boss\ as\ a\ way\ to\ attack\ it.\r\n\ \r\n\ @return\ boolean\ \ \ \ \ \ \ \ \ \ true\ if\ the\ cell\ is\ an\ attackCell,\ false\ if\ it\ is\ not.\r\n
comment13.params=
comment13.target=void\ act()
comment13.text=\r\n\ Act\ -\ refreshes\ its\ access\ to\ the\ world's\ grid/checkerBoard,\ refreshes\ transparency,\ removes\ any\ unwanted\ VulnCellIndicators.\r\n
comment14.params=fadeAway\ opaqueDuration\ speed\ sprite
comment14.target=void\ generateDamageEffect(int,\ int,\ double,\ greenfoot.GreenfootImage)
comment14.text=\r\n\ A\ method\ for\ the\ cell\ to\ generate\ a\ damage\ effect\ on\ it\ in\ order\ to\ harm\ or\ hurt\ any\ players\ anchored\ to\ it.\r\n\ The\ parameters\ passed\ into\ it\ mirror\ the\ parameters\ you\ would\ pass\ into\ the\ constructor\ of\ the\ damageEffect\r\n\ \r\n\ @param\ fadeAway\ \ \ \ \ \ \ \ \ \ number\ determining\ how\ quickly\ the\ damageEffect\ fades\ away\r\n\ @param\ opaqueDuration\ \ \ \ number\ determining\ how\ long\ the\ damage\ effect\ stays\ opaque\ (and\ damaging)\r\n\ @param\ speed\ \ \ \ \ \ \ \ \ \ \ \ \ how\ fast\ the\ damageEffect\ fades\ in\ to\ max\ opacity\r\n\ @param\ sprite\ \ \ \ \ \ \ \ \ \ \ \ the\ sprite/image\ of\ the\ damageEffect.\r\n
comment15.params=damageEffect
comment15.target=void\ generateDamageEffect(DamageEffect)
comment15.text=\r\n\ A\ method\ for\ the\ cell\ to\ generate\ a\ damage\ effect\ on\ it\ in\ order\ to\ harm\ or\ hurt\ any\ players\ anchored\ to\ it.\r\n\ The\ parameter\ passed\ into\ it\ is\ instead\ directly\ a\ separate\ damageEffect\ object.\r\n\ \r\n\ @param\ damageEffect\ \ \ \ \ \ the\ damageEffect\ you\ want\ the\ cell\ to\ generate.\r\n
comment2.params=
comment2.target=java.lang.String\ type()
comment2.text=\r\n\ Getter\ for\ the\ type\ of\ the\ cell\ -\ whether\ or\ not\ it\ is\ a\ white\ or\ black\ tile.\r\n\ \r\n\ @return\ String\ \ \ \ \ \ \ \ \ \ either\ "white"\ or\ "black",\ based\ on\ the\ colouring\ of\ the\ tile.\r\n
comment3.params=
comment3.target=int\ getYCoord()
comment3.text=\r\n\ Getter\ for\ the\ Y\ coordinate\ of\ the\ cell,\ finding\ itself\ by\ searching\ through\ the\ grid\ world's\ checkerboard\ for\ itself\ with\ a\ nested\ for\ loop\r\n\ \r\n\ @return\ int\ \ \ \ \ \ \ \ \ \ the\ y-coordinate\ of\ the\ cell\ -\ returns\ -1\ if\ the\ cell\ is\ not\ on\ the\ grid.\r\n
comment4.params=
comment4.target=int\ getXCoord()
comment4.text=\r\n\ Getter\ for\ the\ X\ coordinate\ of\ the\ cell,\ finding\ itself\ by\ searching\ through\ the\ grid\ world's\ checkerboard\ for\ itself\ with\ a\ nested\ for\ loop\r\n\ \r\n\ @return\ int\ \ \ \ \ \ \ \ \ \ the\ x-coordinate\ of\ the\ cell\ -\ returns\ -1\ if\ the\ cell\ is\ not\ on\ the\ grid.\r\n
comment5.params=player
comment5.target=void\ acceptPlayer(Player)
comment5.text=\r\n\ Mutator\ for\ the\ Player\ variable\ -\ redefines\ the\ Player\ variable,\ typically\ null,\ as\ a\ player\ object\ passed\ into\ it\ by\ parameter.\r\n\ \r\n\ @param\ player\ \ \ \ \ \ \ \ \ \ the\ player\ object\ you\ wish\ for\ the\ Cell\ to\ identify\ as\ its\ own\ player\ (its\ instance\ player\ variable)\r\n
comment6.params=
comment6.target=void\ rejectPlayer()
comment6.text=\r\n\ Mutator\ for\ the\ Player\ variable\ -\ redefines\ the\ Player\ variable\ back\ to\ null,\ usually\ for\ a\ Player\ to\ "de-anchor"\ itself\ from\ this.\r\n
comment7.params=
comment7.target=boolean\ hasPlayer()
comment7.text=\r\n\ Getter\ for\ whether\ or\ not\ this\ cell\ "contains"\ a\ Player,\ or,\ if\ the\ player\ variable\ is\ null.\r\n\ \r\n\ @return\ boolean\ \ \ \ \ \ \ \ \ \ this.player\ \=\=\ null,\ or\ if\ this\ cell\ contains\ a\ player.\r\n
comment8.params=image
comment8.target=void\ becomeAttackCell(greenfoot.GreenfootImage)
comment8.text=\r\n\ Getter\ for\ whether\ or\ not\ this\ cell\ "contains"\ a\ Player,\ or,\ if\ the\ player\ variable\ is\ null.\r\n\ \r\n\ @return\ boolean\ \ \ \ \ \ \ \ \ \ this.player\ \=\=\ null,\ or\ if\ this\ cell\ contains\ a\ player.\r\n
comment9.params=
comment9.target=void\ becomeNotAttackCell()
comment9.text=\r\n\ Method\ to\ toggle\ a\ cell\ from\ a\ cell\ from\ which\ you\ can\ attack\ a\ Boss\ from,\ to\ one\ that\ is\ vacant\ or\ empty\ of\ such\ measures.\r\n\ Toggles\ the\ attackCell\ variable\ to\ false,\ then\ sets\ the\ instance/contained\ Boss\ variable\ to\ null,\ then\ resets\ its\ image,\ \r\n\ then\ removes\ its\ VulnCellIndicator\ from\ the\ world,\ and\ sets\ the\ corresponding\ variable\ to\ null.\r\n
numComments=16
